DevLog

05/27/14
We have developed the overall framework of our project. 
GUI or not GUI?! We don't now yet... 
Tiles on the map are 2-D arrays.
One map can be connected to other maps, points on maps could include buildings that players can enter (hence link to another map).
Grasses are also point on the map, on which there is a chance to trigger a fight (again, link to another scenario).
Players have attributes that include a bag, which is a circularly linked list that contains items such as pokeball (to catch pokemon)
And potions (that boosts the stat of the player's Pokemon). 
Likewise, the player's Pokemons are also contained in a circularly linked list. 
NPCs are also present on the map, the player can talk to them or fight them. 
Gym leaders are in buildings and player's ultimate goal is to defeat them.

05/28/14
To-do List
Major Classes: Maps, Tiles, Pokemon, Moves. Players, Items (Consummables), NPCs 
Maps: 2-D Array of tiles, displayed either as GUI or printed on command line.
Tiles: has basic property location, and may or may not contain a NPC, Pokemon healing machine. 
Has subclasses: grass, entrance to buildings, wall, link to other maps.
Pokemon: Basic properties include type, moves (an array of size 4), HP, PP. Evolution.
Moves: Have types.
Players: Have a bag (a list), that contain array of Pokemon, array of items. 
Items: Potions, pokeball
Main Class: Intro allows player to choose a starter pokemon. Then, player dropped on Map. 
On map, player can check his bag at any time.

05/29/14
Additional Classes:
Battle Scene: contain a player and an NPC.
NPC: Have a array of Pokemon, a list of banters and taunts.
Flow Chart:
Main Class (Intro)-->Map-->Tiles-->Grass-->Battle Scene-->Pokemon-->Moves
                        -->NPCs-->Battle Scene-->Pokemon-->Moves
                        -->Building-->Pokemon (healing)
                -->Player-->Pokemon
                         -->Items
Completed a few skeletal classes.

05/30/14
Added more skeletal classes

6/2/14
Started putting everything together. 
Basic class to make it to work.

6/3/14
Finished writing all skeleton classes. 
Started driver.

6/4/14
Made sure everything compiles.
Decided to do Gui!!!
Yay for colors.

6/8/14 
Well, I forgot to update this... so I'll include stuff from the past few days.
Revamping the project by using Processing 2.0. 
Spent 6/7/14 learning it. I know the basics to be able to create my project. Also, it's very similiar to java.
Have everything planned out. It's actually easier than our last design. 
It's much more colorful and visual too.
Note: Processing is amazing. It's like Netlogo + Java combined. Doesn't even require you to compile. There's a button.
Moral: It's the little things in life that matter.
I feel as if this transition may be a little late...
but I'm bringing my laptop to school so that I can work on this project whenever i have free time.
For the coding, I got the basic layout of the map which consists of tiles, the tiles class, and the player class.

6/9/14
Representing character as a red tile(will replace with image later) and it has the ability to move north,west,south, and east.
When encountering an obstacle such as another Trainer, the player will stop.
Also, the player has the ability to access the tile in the direction it is facing. 
If Spacebar is pressed while facing another trainer, the scene will change into a battle scene.
Working on battle scene, created pokemon class and move class. Incoporating it together to the battle scene.
Also, ramped up the intro, it's just amazing. My favorite part is cycling through the starter pokemons. 
I circularly linked them in order to do this. Also, after you choose your pokemon, the scene completely changes into the 
actual map/game.

6/11/14
Incorporated images instead of a blue square for the character. The character has 4 different views, one for each direction.
When interacting with another trainer, another scene appears where the pokemons battle. To do this, I enlarged the screen size.
Also, as I'm progressing, most things are going smoothly. No really big problems that I foresee. 
Last fundamental thing to do is actual battling code that compares both pokemon. 
Everything else after that is just to make the project nicer.

